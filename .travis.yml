os: linux
dist: xenial
language: python
services:
  - docker
  - mongodb
  - xvfb

env:
  global:
    - MPLBACKEND: Qt5Agg

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

jobs:
  fast_finish: true
  include:
    - os: linux
      python: 3.7
    - os: linux
      python: 3.8
    # - os: linux
    #   python: 3.9
    - os: linux
      python: 3.7
      env:
        - USE_DOCKER: true
    - os: linux
      python: 3.8
      env:
        - USE_DOCKER: true
    #  - os: linux
    #    python: 3.9
    #    env:
    #      - USE_DOCKER: true

before_install:
  - |
    set -e
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        arch="Linux"
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        arch="MacOSX"
    else
        echo "Unknown arch $TRAVIS_OS_NAME"
        exit 1
    fi
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-${arch}-x86_64.sh -O miniconda.sh
    chmod +x miniconda.sh
    ./miniconda.sh -b -p ~/mc
    source ~/mc/etc/profile.d/conda.sh
    conda update conda --yes
    # export CONDARC=ci/condarc

install:
  - env | sort -u
  - conda create -n testenv python=$TRAVIS_PYTHON_VERSION -y
  - conda activate testenv
  - conda install shadow3 -c nsls2forge -c defaults --override-channels -y
  # Install this package and the packages listed in requirements.txt.
  - pip install .
  # Install extra requirements for running tests and building docs.
  - pip install -r requirements-dev.txt
  - pip install --upgrade numpy pip
  - pip list
  # Removed for testing entry point feature.
  #- mkdir -p $HOME/.config/databroker/ && cp -v examples/local.yml $HOME/.config/databroker/local.yml
  - |
    if [ ! -z "$USE_DOCKER" ]; then
        docker pull radiasoft/sirepo:beta
    fi

script:
  - flake8  # Enforce code style ('relaxed' line length limit is set in .flake8 config file).
  - |
    if [ ! -z "$USE_DOCKER" ]; then
        container_id=$(docker run -d -t --init --rm --name sirepo -e SIREPO_AUTH_METHODS=bluesky:guest -e SIREPO_AUTH_BLUESKY_SECRET=bluesky -e SIREPO_SRDB_ROOT=/sirepo -e SIREPO_COOKIE_IS_SECURE=false -p 8000:8000 -v $PWD/sirepo_bluesky/tests/SIREPO_SRDB_ROOT:/SIREPO_SRDB_ROOT:ro,z radiasoft/sirepo:beta bash -l -c "mkdir -v -p /sirepo/ && cp -Rv /SIREPO_SRDB_ROOT/* /sirepo/ && sirepo service http")
        pytest -vvvv -m "docker"  # Run the tests and check for test coverage.
        status=$?
        docker logs $container_id
        if [ $status -gt 0 ]; then
            exit $status
        fi
    else
        pytest -vvvv -m "not docker"  # Run the tests and check for test coverage.
    fi
  - make -C docs html  # Build the documentation.
